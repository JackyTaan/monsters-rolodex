{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","map","Searchbox","placeholder","handleChange","type","onChange","App","e","setState","searchfield","target","value","state","bind","fetch","then","response","json","users","this","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAOaA,EAAO,SAAAC,GAAK,OAErB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCLbC,EAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMI,QAAQK,KAAI,SAAAL,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNlBK,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOX,UAAU,SAASY,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCiDjEG,G,8DA7Cb,aAAc,IAAD,8BACX,gBAiBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAhBtC,EAAKC,MAAQ,CACXjB,QAAS,GACTc,YAAY,IAGd,EAAKN,aAAe,EAAKA,aAAaU,KAAlB,gBART,E,qDAYb,WAAoB,IAAD,OACjBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACb,QAAQuB,S,oBAO1C,WAAS,IAAD,EAEyBC,KAAKP,MAA7BjB,EAFD,EAECA,QAASc,EAFV,EAEUA,YAEVW,EAAkBzB,EAAQ0B,QAAO,SAAA1B,GAAO,OAC1CA,EAAQE,KAAKyB,cAAcC,SAASd,EAAYa,kBAGjCH,KAAKP,MAAMH,YAE9B,OACE,sBAAKjB,UAAU,MAAf,UACE,iDACE,cAAC,EAAD,CAAWU,YAAY,0BAA0BC,aAAcgB,KAAKhB,eACpE,cAAC,EAAD,CAAUR,QAASyB,W,GArCXI,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.5997d144.chunk.js","sourcesContent":["\nimport { props } from 'bluebird'\n\nimport React from 'react'\n\nimport './card.styles.css';\n\nexport const Card = props => (\n    \n    <div className='card-container'>\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=120x120`}/>\n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n    </div>\n    \n)","\nimport React from 'react';\n\nimport './card-list.styles.css';\n\nimport { Card } from '../card/card.component';\n\nexport const CardList = props => (\n    <div className='card-list'>\n        {props.monster.map(monster => (\n            <Card key={monster.id} monster={monster} />\n        ))}\n    </div>\n);\n","import React from 'react';\n\nimport './search-box.styles.css';\n\nexport const Searchbox = ({placeholder, handleChange}) => (\n    <input className='search' type='search' placeholder={placeholder} onChange={handleChange} />\n)\n\n","import React, {Â Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { Searchbox } from './components/search-box/search-box.component';\n\n//import logo from './logo.svg';\nimport './App.css';\nimport { USERWHITESPACABLE_TYPES } from '@babel/types';\n\nclass App extends Component{\n  constructor(){\n    super();\n    \n    this.state = {\n      monster: [],\n      searchfield:''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({monster:users}))\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchfield: e.target.value})\n  }\n\n  render(){\n\n    const {monster, searchfield} = this.state;\n\n    const filteredMonster = monster.filter(monster => \n        monster.name.toLowerCase().includes(searchfield.toLowerCase())\n      )\n\n    const searchfile = this.state.searchfield;\n    \n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n          <Searchbox placeholder='Search monster with ...' handleChange={this.handleChange}/>\n          <CardList monster={filteredMonster}/>\n      </div>\n    );\n  }\n\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}